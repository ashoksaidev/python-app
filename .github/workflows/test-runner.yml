name: Minimal CI/CD Test

on:
  workflow_dispatch:   # manual trigger

permissions:
  id-token: write      # needed for Vault OIDC
  contents: read

jobs:
  test:
    runs-on: [self-hosted, Linux, X64]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Read JFrog creds from Vault (OIDC)
        id: vault
        uses: hashicorp/vault-action@v3
        with:
          url: ${{ secrets.VAULT_ADDR }}
          method: jwt
          role: gh-actions-poc
          secrets: |
            kv/data/jfrog username | JFROG_USER ;
            kv/data/jfrog token    | JFROG_TOKEN

      - name: Quick sanity (mask & ping Artifactory)
        env:
          JFROG_USER:  ${{ steps.vault.outputs.JFROG_USER }}
          JFROG_TOKEN: ${{ steps.vault.outputs.JFROG_TOKEN }}
          JFROG_SUB:   trialbgccpz                          # <-- change if your subdomain differs
        run: |
          echo "JFROG_USER=${JFROG_USER}"
          echo "JFROG_TOKEN=$(echo "$JFROG_TOKEN" | sed 's/./*/g')"   # mask
          curl -sf -u "${JFROG_USER}:${JFROG_TOKEN}" "https://${JFROG_SUB}.jfrog.io/artifactory/api/system/ping" | tee /dev/stderr

      # --- OPTIONAL: Uncomment if you want to prove Docker auth too ---
      # - name: Docker login to JFrog
      #   env:
      #     JFROG_USER:  ${{ steps.vault.outputs.JFROG_USER }}
      #     JFROG_TOKEN: ${{ steps.vault.outputs.JFROG_TOKEN }}
      #     JFROG_SUB:   trialbgccpz
      #   run: |
      #     echo "$JFROG_TOKEN" | docker login "${JFROG_SUB}.jfrog.io" -u "$JFROG_USER" --password-stdin
      #     docker pull hello-world:latest
      #     docker tag hello-world:latest "${JFROG_SUB}.jfrog.io/docker/hello-world:ci-test"
      #     docker push "${JFROG_SUB}.jfrog.io/docker/hello-world:ci-test"
