name: Deploy Application

on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Docker image path from JFrog (registry/repo/image:tag)'
        required: true
      deploy_target:
        description: 'Where to deploy: vm (Azure VM) or azure_webapp (Azure Web App)'
        required: true
        default: 'vm'
      vm_host:
        description: 'Azure VM hostname or public IP'
        required: false
      vm_user:
        description: 'Azure VM SSH username (e.g. azureuser)'
        required: false
      azure_resource_group:
        description: 'Resource group for the Azure Web App'
        required: false

permissions:
  id-token: write
  contents: read

jobs:
  deploy_application:
    name: Deploy Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Validate image tag
        run: |
          if [ -z "${{ github.event.inputs.image_tag }}" ]; then
            echo "No image tag provided. Please set workflow_dispatch input 'image_tag'"
            exit 1
          fi
          echo "image_to_deploy=${{ github.event.inputs.image_tag }}" >> $GITHUB_OUTPUT
        shell: bash

      - name: Authenticate with Artifactory
        run: echo "${{ secrets.ARTIFACTORY_PASSWORD }}" | docker login "${{ secrets.ARTIFACTORY_URL }}" -u "${{ secrets.ARTIFACTORY_USER }}" --password-stdin

      - name: Pull Docker image
        run: |
          if [[ "${{ github.event.inputs.image_tag }}" == */* ]]; then
            IMAGE="${{ github.event.inputs.image_tag }}"
          else
            IMAGE="${{ secrets.ARTIFACTORY_URL }}/${{ secrets.DOCKER_REPO }}/my-app:${{ github.event.inputs.image_tag }}"
          fi
          echo "Pulling image: $IMAGE"
          docker pull "$IMAGE"
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV

      - name: Deploy to VM
        if: ${{ github.event.inputs.deploy_target == 'vm' }}
        run: |
          if [[ -z "${{ github.event.inputs.vm_host }}" || -z "${{ github.event.inputs.vm_user }}" ]]; then
            echo "VM host/user not provided"
            exit 1
          fi
          echo "${{ secrets.VM_SSH_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/deploy_key "${{ github.event.inputs.vm_user }}@${{ github.event.inputs.vm_host }}" \
            "docker login $ARTIFACTORY_URL -u $ARTIFACTORY_USER -p '$ARTIFACTORY_PASSWORD' && \
             docker pull $IMAGE && \
             docker stop app || true && docker rm app || true && \
             docker run -d --name app -p 80:80 $IMAGE"

      - name: Azure login
        if: ${{ github.event.inputs.deploy_target == 'azure_webapp' }}
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Web App
        if: ${{ github.event.inputs.deploy_target == 'azure_webapp' }}
        run: |
          az webapp config container set \
            --name "${{ secrets.AZURE_WEBAPP_NAME }}" \
            --resource-group "${{ github.event.inputs.azure_resource_group || secrets.AZURE_RESOURCE_GROUP }}" \
            --docker-custom-image-name "$IMAGE" \
            --docker-registry-server-url "$ARTIFACTORY_URL" \
            --docker-registry-server-user "$ARTIFACTORY_USER" \
            --docker-registry-server-password "$ARTIFACTORY_PASSWORD"
          az webapp restart \
            --name "${{ secrets.AZURE_WEBAPP_NAME }}" \
            --resource-group "${{ github.event.inputs.azure_resource_group || secrets.AZURE_RESOURCE_GROUP }}"
